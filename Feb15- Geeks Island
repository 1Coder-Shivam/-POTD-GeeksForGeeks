class Solution{
	int water_flow(int [][] mat, int N, int M) {
		//Write your code here
		boolean [][]oceanInd = new boolean[N][M];
		boolean [][]oceanArb = new boolean[N][M];
		
		for(int i=0;i<M;i++) dfs(mat,oceanInd,0,i,N,M);//1st row
		for(int i=0;i<N;i++) dfs(mat,oceanInd,i,0,N,M);//first col
		
		for(int i=0;i<N;i++) dfs(mat,oceanArb,i,M-1,N,M);//last col
		for(int i=0;i<M;i++) dfs(mat,oceanArb,N-1,i,N,M); //last row
		
		int ans=0;
		for(int i=0;i<N;i++){
		    for(int j=0;j<M;j++){
		        if(oceanInd[i][j]&&oceanArb[i][j]) ans++;
		    }
		}
		return ans;
		
	}
	void dfs(int [][]arr, boolean [][]vis, int i,int j, int r, int c){
	    
	    if(i<0||i>=r||j<0||j>=c|| vis[i][j]) return;
	    
	    vis[i][j] =true;
	    
	    
	    //right
	    if(j+1<c && !vis[i][j+1] &&arr[i][j+1]>=arr[i][j])
	    dfs(arr,vis,i,j+1,r,c);
	        
	    //down
	    if(i+1<r && !vis[i+1][j] &&arr[i+1][j]>=arr[i][j])
	    dfs(arr,vis,i+1,j,r,c);
	        
	    //left
	    if(j-1>=0 && !vis[i][j-1] &&arr[i][j-1]>=arr[i][j])
	    dfs(arr,vis,i,j-1,r,c);
	        
        //up
        if(i-1>=0 && !vis[i-1][j] &&arr[i-1][j]>=arr[i][j])
	    dfs(arr,vis,i-1,j,r,c);
	        
	}
}
